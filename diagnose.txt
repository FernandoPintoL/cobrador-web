// Diagnóstico de la ruta /api/users/14/clients

echo "🔍 Diagnóstico de la ruta /api/users/14/clients\n\n";

// 1. Verificar que el usuario con ID 14 existe
$user14 = \App\Models\User::find(14);
if (!$user14) {
    echo "❌ ERROR: No existe un usuario con ID 14\n";
    echo "💡 Usuarios disponibles:\n";
    \App\Models\User::all()->each(function($user) {
        echo "   - ID: {$user->id}, Nombre: {$user->name}, Roles: " . $user->roles->pluck('name')->implode(', ') . "\n";
    });
    return;
}

echo "✅ Usuario encontrado: {$user14->name}\n";
echo "📋 Roles: " . $user14->roles->pluck('name')->implode(', ') . "\n\n";

// 2. Verificar si es un manager
$isManager = $user14->hasRole('manager');
echo "👤 ¿Es manager? " . ($isManager ? "✅ SÍ" : "❌ NO") . "\n";

if (!$isManager) {
    echo "⚠️  PROBLEMA IDENTIFICADO: El usuario con ID 14 no tiene el rol 'manager'\n";
    echo "💡 Para usar la ruta /api/users/{manager}/clients, el usuario debe tener el rol 'manager'\n\n";
    
    // Sugerir usuarios que sí son managers
    echo "🎯 Usuarios que SÍ son managers:\n";
    \App\Models\User::whereHas('roles', function($q) {
        $q->where('name', 'manager');
    })->each(function($manager) {
        echo "   - ID: {$manager->id}, Nombre: {$manager->name}\n";
    });
    
    echo "\n🔧 Para convertir al usuario 14 en manager:\n";
    echo "   \$user = \\App\\Models\\User::find(14);\n";
    echo "   \$user->assignRole('manager');\n";
} else {
    echo "✅ El usuario es manager, la ruta debería funcionar\n";
}

echo "\n📍 Rutas disponibles:\n";
echo "   - GET /api/users/{manager}/clients (todos los clientes)\n";
echo "   - GET /api/users/{manager}/clients-direct (solo clientes directos)\n";
